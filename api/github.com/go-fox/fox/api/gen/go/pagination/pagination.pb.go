// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: fox/pagination/pagination.proto

package pagination

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Condition_LogicalOperator int32

const (
	Condition_AND Condition_LogicalOperator = 0
	Condition_OR  Condition_LogicalOperator = 1
)

// Enum value maps for Condition_LogicalOperator.
var (
	Condition_LogicalOperator_name = map[int32]string{
		0: "AND",
		1: "OR",
	}
	Condition_LogicalOperator_value = map[string]int32{
		"AND": 0,
		"OR":  1,
	}
)

func (x Condition_LogicalOperator) Enum() *Condition_LogicalOperator {
	p := new(Condition_LogicalOperator)
	*p = x
	return p
}

func (x Condition_LogicalOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Condition_LogicalOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_fox_pagination_pagination_proto_enumTypes[0].Descriptor()
}

func (Condition_LogicalOperator) Type() protoreflect.EnumType {
	return &file_fox_pagination_pagination_proto_enumTypes[0]
}

func (x Condition_LogicalOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Condition_LogicalOperator.Descriptor instead.
func (Condition_LogicalOperator) EnumDescriptor() ([]byte, []int) {
	return file_fox_pagination_pagination_proto_rawDescGZIP(), []int{1, 0}
}

type Condition_QueryOperator int32

const (
	Condition_EQUAL         Condition_QueryOperator = 0
	Condition_NOT_EQUAL     Condition_QueryOperator = 1
	Condition_GREATER       Condition_QueryOperator = 2
	Condition_GREATER_EQUAL Condition_QueryOperator = 3
	Condition_LESS          Condition_QueryOperator = 4
	Condition_LESS_EQUAL    Condition_QueryOperator = 5
	Condition_LIKE          Condition_QueryOperator = 6
	Condition_IN            Condition_QueryOperator = 7
	Condition_NOT_IN        Condition_QueryOperator = 8
	Condition_BETWEEN       Condition_QueryOperator = 9
	Condition_IS_NULL       Condition_QueryOperator = 10
	Condition_IS_NOT_NULL   Condition_QueryOperator = 11
)

// Enum value maps for Condition_QueryOperator.
var (
	Condition_QueryOperator_name = map[int32]string{
		0:  "EQUAL",
		1:  "NOT_EQUAL",
		2:  "GREATER",
		3:  "GREATER_EQUAL",
		4:  "LESS",
		5:  "LESS_EQUAL",
		6:  "LIKE",
		7:  "IN",
		8:  "NOT_IN",
		9:  "BETWEEN",
		10: "IS_NULL",
		11: "IS_NOT_NULL",
	}
	Condition_QueryOperator_value = map[string]int32{
		"EQUAL":         0,
		"NOT_EQUAL":     1,
		"GREATER":       2,
		"GREATER_EQUAL": 3,
		"LESS":          4,
		"LESS_EQUAL":    5,
		"LIKE":          6,
		"IN":            7,
		"NOT_IN":        8,
		"BETWEEN":       9,
		"IS_NULL":       10,
		"IS_NOT_NULL":   11,
	}
)

func (x Condition_QueryOperator) Enum() *Condition_QueryOperator {
	p := new(Condition_QueryOperator)
	*p = x
	return p
}

func (x Condition_QueryOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Condition_QueryOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_fox_pagination_pagination_proto_enumTypes[1].Descriptor()
}

func (Condition_QueryOperator) Type() protoreflect.EnumType {
	return &file_fox_pagination_pagination_proto_enumTypes[1]
}

func (x Condition_QueryOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Condition_QueryOperator.Descriptor instead.
func (Condition_QueryOperator) EnumDescriptor() ([]byte, []int) {
	return file_fox_pagination_pagination_proto_rawDescGZIP(), []int{1, 1}
}

// PagingRequest 分页请求
type PagingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          *uint32                `protobuf:"varint,1,opt,name=page,proto3,oneof" json:"page,omitempty"`                         // 当前页码
	Size          *uint32                `protobuf:"varint,2,opt,name=size,proto3,oneof" json:"size,omitempty"`                         // 每页数量
	Query         *Condition             `protobuf:"bytes,3,opt,name=query,proto3,oneof" json:"query,omitempty"`                        // 查询条件
	OrderBy       *string                `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`     // 排序字段
	NoPaging      *bool                  `protobuf:"varint,5,opt,name=no_paging,json=noPaging,proto3,oneof" json:"no_paging,omitempty"` // 是否不分页，如果为true则page和size无效
	Fields        *string                `protobuf:"bytes,6,opt,name=fields,proto3,oneof" json:"fields,omitempty"`                      // 要查询的字段，如果为空则查询全部字段
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PagingRequest) Reset() {
	*x = PagingRequest{}
	mi := &file_fox_pagination_pagination_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingRequest) ProtoMessage() {}

func (x *PagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fox_pagination_pagination_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingRequest.ProtoReflect.Descriptor instead.
func (*PagingRequest) Descriptor() ([]byte, []int) {
	return file_fox_pagination_pagination_proto_rawDescGZIP(), []int{0}
}

func (x *PagingRequest) GetPage() uint32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *PagingRequest) GetSize() uint32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *PagingRequest) GetQuery() *Condition {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *PagingRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *PagingRequest) GetNoPaging() bool {
	if x != nil && x.NoPaging != nil {
		return *x.NoPaging
	}
	return false
}

func (x *PagingRequest) GetFields() string {
	if x != nil && x.Fields != nil {
		return *x.Fields
	}
	return ""
}

type Condition struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	LogicalOperator Condition_LogicalOperator `protobuf:"varint,1,opt,name=logical_operator,json=logicalOperator,proto3,enum=fox.pagination.Condition_LogicalOperator" json:"logical_operator,omitempty"`
	Field           string                    `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Value           *structpb.Value           `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	QueryOperator   Condition_QueryOperator   `protobuf:"varint,4,opt,name=query_operator,json=queryOperator,proto3,enum=fox.pagination.Condition_QueryOperator" json:"query_operator,omitempty"`
	Conditions      []*Condition              `protobuf:"bytes,5,rep,name=conditions,proto3" json:"conditions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Condition) Reset() {
	*x = Condition{}
	mi := &file_fox_pagination_pagination_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_fox_pagination_pagination_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_fox_pagination_pagination_proto_rawDescGZIP(), []int{1}
}

func (x *Condition) GetLogicalOperator() Condition_LogicalOperator {
	if x != nil {
		return x.LogicalOperator
	}
	return Condition_AND
}

func (x *Condition) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Condition) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Condition) GetQueryOperator() Condition_QueryOperator {
	if x != nil {
		return x.QueryOperator
	}
	return Condition_EQUAL
}

func (x *Condition) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

var File_fox_pagination_pagination_proto protoreflect.FileDescriptor

var file_fox_pagination_pagination_proto_rawDesc = string([]byte{
	0x0a, 0x1f, 0x66, 0x6f, 0x78, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x98, 0x02, 0x0a, 0x0d, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x6f, 0x5f,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x08,
	0x6e, 0x6f, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x6f, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x83, 0x04, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x66, 0x6f, 0x78,
	0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x22, 0x0a,
	0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x52, 0x10,
	0x01, 0x22, 0xac, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x45, 0x53, 0x53, 0x5f,
	0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4b, 0x45, 0x10,
	0x06, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54,
	0x5f, 0x49, 0x4e, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e,
	0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x53, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x0a, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x0b,
	0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x6f, 0x2d, 0x66, 0x6f, 0x78, 0x2f, 0x66, 0x6f, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_fox_pagination_pagination_proto_rawDescOnce sync.Once
	file_fox_pagination_pagination_proto_rawDescData []byte
)

func file_fox_pagination_pagination_proto_rawDescGZIP() []byte {
	file_fox_pagination_pagination_proto_rawDescOnce.Do(func() {
		file_fox_pagination_pagination_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fox_pagination_pagination_proto_rawDesc), len(file_fox_pagination_pagination_proto_rawDesc)))
	})
	return file_fox_pagination_pagination_proto_rawDescData
}

var file_fox_pagination_pagination_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_fox_pagination_pagination_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fox_pagination_pagination_proto_goTypes = []any{
	(Condition_LogicalOperator)(0), // 0: fox.pagination.Condition.LogicalOperator
	(Condition_QueryOperator)(0),   // 1: fox.pagination.Condition.QueryOperator
	(*PagingRequest)(nil),          // 2: fox.pagination.PagingRequest
	(*Condition)(nil),              // 3: fox.pagination.Condition
	(*structpb.Value)(nil),         // 4: google.protobuf.Value
}
var file_fox_pagination_pagination_proto_depIdxs = []int32{
	3, // 0: fox.pagination.PagingRequest.query:type_name -> fox.pagination.Condition
	0, // 1: fox.pagination.Condition.logical_operator:type_name -> fox.pagination.Condition.LogicalOperator
	4, // 2: fox.pagination.Condition.value:type_name -> google.protobuf.Value
	1, // 3: fox.pagination.Condition.query_operator:type_name -> fox.pagination.Condition.QueryOperator
	3, // 4: fox.pagination.Condition.conditions:type_name -> fox.pagination.Condition
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_fox_pagination_pagination_proto_init() }
func file_fox_pagination_pagination_proto_init() {
	if File_fox_pagination_pagination_proto != nil {
		return
	}
	file_fox_pagination_pagination_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fox_pagination_pagination_proto_rawDesc), len(file_fox_pagination_pagination_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fox_pagination_pagination_proto_goTypes,
		DependencyIndexes: file_fox_pagination_pagination_proto_depIdxs,
		EnumInfos:         file_fox_pagination_pagination_proto_enumTypes,
		MessageInfos:      file_fox_pagination_pagination_proto_msgTypes,
	}.Build()
	File_fox_pagination_pagination_proto = out.File
	file_fox_pagination_pagination_proto_goTypes = nil
	file_fox_pagination_pagination_proto_depIdxs = nil
}
