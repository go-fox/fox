// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5-devel
// 	protoc        v5.27.1
// source: api/annotations/annotations.proto

package annotations

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenerateType int32

const (
	GenerateType_grpc      GenerateType = 0
	GenerateType_http      GenerateType = 1
	GenerateType_websocket GenerateType = 2
)

// Enum value maps for GenerateType.
var (
	GenerateType_name = map[int32]string{
		0: "grpc",
		1: "http",
		2: "websocket",
	}
	GenerateType_value = map[string]int32{
		"grpc":      0,
		"http":      1,
		"websocket": 2,
	}
)

func (x GenerateType) Enum() *GenerateType {
	p := new(GenerateType)
	*p = x
	return p
}

func (x GenerateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_annotations_annotations_proto_enumTypes[0].Descriptor()
}

func (GenerateType) Type() protoreflect.EnumType {
	return &file_api_annotations_annotations_proto_enumTypes[0]
}

func (x GenerateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateType.Descriptor instead.
func (GenerateType) EnumDescriptor() ([]byte, []int) {
	return file_api_annotations_annotations_proto_rawDescGZIP(), []int{0}
}

type ServiceRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Add middleware to the current service
	Generate      []GenerateType `protobuf:"varint,55000,rep,packed,name=Generate,proto3,enum=fox.api.GenerateType" json:"Generate"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceRule) Reset() {
	*x = ServiceRule{}
	mi := &file_api_annotations_annotations_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRule) ProtoMessage() {}

func (x *ServiceRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_annotations_annotations_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRule.ProtoReflect.Descriptor instead.
func (*ServiceRule) Descriptor() ([]byte, []int) {
	return file_api_annotations_annotations_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceRule) GetGenerate() []GenerateType {
	if x != nil {
		return x.Generate
	}
	return nil
}

type MethodRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Add middleware to the current service
	Generate []GenerateType `protobuf:"varint,1,rep,packed,name=Generate,proto3,enum=fox.api.GenerateType" json:"Generate"`
	// A short summary of what the operation does.
	Summary string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary"`
	// A verbose explanation of the operation behavior. CommonMark syntax MAY be used for rich text representation.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description"`
	// A list of HTTP configuration rules that apply to individual API methods.
	//
	// **NOTE:** All service configuration rules follow "last one wins" order.
	Http          *HttpRule `protobuf:"bytes,4,opt,name=http,proto3,oneof" json:"http"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MethodRule) Reset() {
	*x = MethodRule{}
	mi := &file_api_annotations_annotations_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MethodRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodRule) ProtoMessage() {}

func (x *MethodRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_annotations_annotations_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodRule.ProtoReflect.Descriptor instead.
func (*MethodRule) Descriptor() ([]byte, []int) {
	return file_api_annotations_annotations_proto_rawDescGZIP(), []int{1}
}

func (x *MethodRule) GetGenerate() []GenerateType {
	if x != nil {
		return x.Generate
	}
	return nil
}

func (x *MethodRule) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *MethodRule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MethodRule) GetHttp() *HttpRule {
	if x != nil {
		return x.Http
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_api_annotations_annotations_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_api_annotations_annotations_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_api_annotations_annotations_proto_rawDescGZIP(), []int{2}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*File                `protobuf:"bytes,1,rep,name=files,proto3" json:"files"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_api_annotations_annotations_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_annotations_annotations_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_api_annotations_annotations_proto_rawDescGZIP(), []int{3}
}

func (x *UploadRequest) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

// HttpRule http rule
type HttpRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Pattern:
	//
	//	*HttpRule_Get
	//	*HttpRule_Post
	//	*HttpRule_Put
	//	*HttpRule_Delete
	//	*HttpRule_Patch
	//	*HttpRule_Options
	//	*HttpRule_Head
	//	*HttpRule_Connect
	//	*HttpRule_Trace
	Pattern            isHttpRule_Pattern `protobuf_oneof:"pattern"`
	AdditionalBindings []*HttpRule        `protobuf:"bytes,66009,rep,name=additional_bindings,json=additionalBindings,proto3" json:"additional_bindings"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HttpRule) Reset() {
	*x = HttpRule{}
	mi := &file_api_annotations_annotations_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRule) ProtoMessage() {}

func (x *HttpRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_annotations_annotations_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRule.ProtoReflect.Descriptor instead.
func (*HttpRule) Descriptor() ([]byte, []int) {
	return file_api_annotations_annotations_proto_rawDescGZIP(), []int{4}
}

func (x *HttpRule) GetPattern() isHttpRule_Pattern {
	if x != nil {
		return x.Pattern
	}
	return nil
}

func (x *HttpRule) GetGet() string {
	if x != nil {
		if x, ok := x.Pattern.(*HttpRule_Get); ok {
			return x.Get
		}
	}
	return ""
}

func (x *HttpRule) GetPost() string {
	if x != nil {
		if x, ok := x.Pattern.(*HttpRule_Post); ok {
			return x.Post
		}
	}
	return ""
}

func (x *HttpRule) GetPut() string {
	if x != nil {
		if x, ok := x.Pattern.(*HttpRule_Put); ok {
			return x.Put
		}
	}
	return ""
}

func (x *HttpRule) GetDelete() string {
	if x != nil {
		if x, ok := x.Pattern.(*HttpRule_Delete); ok {
			return x.Delete
		}
	}
	return ""
}

func (x *HttpRule) GetPatch() string {
	if x != nil {
		if x, ok := x.Pattern.(*HttpRule_Patch); ok {
			return x.Patch
		}
	}
	return ""
}

func (x *HttpRule) GetOptions() string {
	if x != nil {
		if x, ok := x.Pattern.(*HttpRule_Options); ok {
			return x.Options
		}
	}
	return ""
}

func (x *HttpRule) GetHead() string {
	if x != nil {
		if x, ok := x.Pattern.(*HttpRule_Head); ok {
			return x.Head
		}
	}
	return ""
}

func (x *HttpRule) GetConnect() string {
	if x != nil {
		if x, ok := x.Pattern.(*HttpRule_Connect); ok {
			return x.Connect
		}
	}
	return ""
}

func (x *HttpRule) GetTrace() string {
	if x != nil {
		if x, ok := x.Pattern.(*HttpRule_Trace); ok {
			return x.Trace
		}
	}
	return ""
}

func (x *HttpRule) GetAdditionalBindings() []*HttpRule {
	if x != nil {
		return x.AdditionalBindings
	}
	return nil
}

type isHttpRule_Pattern interface {
	isHttpRule_Pattern()
}

type HttpRule_Get struct {
	Get string `protobuf:"bytes,66000,opt,name=get,proto3,oneof"`
}

type HttpRule_Post struct {
	Post string `protobuf:"bytes,66001,opt,name=post,proto3,oneof"`
}

type HttpRule_Put struct {
	Put string `protobuf:"bytes,66002,opt,name=put,proto3,oneof"`
}

type HttpRule_Delete struct {
	Delete string `protobuf:"bytes,66003,opt,name=delete,proto3,oneof"`
}

type HttpRule_Patch struct {
	Patch string `protobuf:"bytes,66004,opt,name=patch,proto3,oneof"`
}

type HttpRule_Options struct {
	Options string `protobuf:"bytes,66005,opt,name=options,proto3,oneof"`
}

type HttpRule_Head struct {
	Head string `protobuf:"bytes,66006,opt,name=head,proto3,oneof"`
}

type HttpRule_Connect struct {
	Connect string `protobuf:"bytes,66007,opt,name=connect,proto3,oneof"`
}

type HttpRule_Trace struct {
	Trace string `protobuf:"bytes,66008,opt,name=trace,proto3,oneof"`
}

func (*HttpRule_Get) isHttpRule_Pattern() {}

func (*HttpRule_Post) isHttpRule_Pattern() {}

func (*HttpRule_Put) isHttpRule_Pattern() {}

func (*HttpRule_Delete) isHttpRule_Pattern() {}

func (*HttpRule_Patch) isHttpRule_Pattern() {}

func (*HttpRule_Options) isHttpRule_Pattern() {}

func (*HttpRule_Head) isHttpRule_Pattern() {}

func (*HttpRule_Connect) isHttpRule_Pattern() {}

func (*HttpRule_Trace) isHttpRule_Pattern() {}

// REQUIRED. Provides metadata about the API. The metadata MAY be used by tooling as required.
type InfoRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// REQUIRED. The title of the API.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	// A short summary of the API.
	Summary string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary"`
	// A description of the API. CommonMark syntax MAY be used for rich text representation.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description"`
	// A URL to the Terms of Service for the API. This MUST be in the form of a URL.
	TermsOfService string `protobuf:"bytes,4,opt,name=termsOfService,proto3" json:"termsOfService"`
	// The contact information for the exposed API.
	Contact *Contact `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact"`
	// The license information for the exposed API.
	License *License `protobuf:"bytes,6,opt,name=license,proto3" json:"license"`
	// REQUIRED. The version of the OpenAPI document (which is distinct from the OpenAPI Specification version or the API implementation version).
	Version       string `protobuf:"bytes,7,opt,name=version,proto3" json:"version"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoRule) Reset() {
	*x = InfoRule{}
	mi := &file_api_annotations_annotations_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRule) ProtoMessage() {}

func (x *InfoRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_annotations_annotations_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRule.ProtoReflect.Descriptor instead.
func (*InfoRule) Descriptor() ([]byte, []int) {
	return file_api_annotations_annotations_proto_rawDescGZIP(), []int{5}
}

func (x *InfoRule) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InfoRule) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *InfoRule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InfoRule) GetTermsOfService() string {
	if x != nil {
		return x.TermsOfService
	}
	return ""
}

func (x *InfoRule) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *InfoRule) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *InfoRule) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// The contact information for the exposed API.
type Contact struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifying name of the contact person/organization.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// The URL pointing to the contact information. This MUST be in the form of a URL.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"`
	// The email address of the contact person/organization. This MUST be in the form of an email address.
	Email         string `protobuf:"bytes,3,opt,name=email,proto3" json:"email"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Contact) Reset() {
	*x = Contact{}
	mi := &file_api_annotations_annotations_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_api_annotations_annotations_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_api_annotations_annotations_proto_rawDescGZIP(), []int{6}
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Contact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// The license information for the exposed API.
type License struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// REQUIRED. The license name used for the API.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// An SPDX license expression for the API. The identifier field is mutually exclusive of the url field.
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier"`
	// A URL to the license used for the API. This MUST be in the form of a URL. The url field is mutually exclusive of the identifier field.
	Url           string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *License) Reset() {
	*x = License{}
	mi := &file_api_annotations_annotations_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_api_annotations_annotations_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_api_annotations_annotations_proto_rawDescGZIP(), []int{7}
}

func (x *License) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *License) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *License) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var file_api_annotations_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*InfoRule)(nil),
		Field:         65000,
		Name:          "fox.api.info",
		Tag:           "bytes,65000,opt,name=info",
		Filename:      "api/annotations/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*ServiceRule)(nil),
		Field:         66000,
		Name:          "fox.api.Service",
		Tag:           "bytes,66000,opt,name=Service",
		Filename:      "api/annotations/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*MethodRule)(nil),
		Field:         67000,
		Name:          "fox.api.method",
		Tag:           "bytes,67000,opt,name=method",
		Filename:      "api/annotations/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         65000,
		Name:          "fox.api.header",
		Tag:           "bytes,65000,opt,name=header",
		Filename:      "api/annotations/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         65001,
		Name:          "fox.api.path",
		Tag:           "bytes,65001,opt,name=path",
		Filename:      "api/annotations/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         65002,
		Name:          "fox.api.query",
		Tag:           "bytes,65002,opt,name=query",
		Filename:      "api/annotations/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         65003,
		Name:          "fox.api.form",
		Tag:           "bytes,65003,opt,name=form",
		Filename:      "api/annotations/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         65004,
		Name:          "fox.api.json",
		Tag:           "bytes,65004,opt,name=json",
		Filename:      "api/annotations/annotations.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional fox.api.InfoRule info = 65000;
	E_Info = &file_api_annotations_annotations_proto_extTypes[0]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional fox.api.ServiceRule Service = 66000;
	E_Service = &file_api_annotations_annotations_proto_extTypes[1]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional fox.api.MethodRule method = 67000;
	E_Method = &file_api_annotations_annotations_proto_extTypes[2]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional string header = 65000;
	E_Header = &file_api_annotations_annotations_proto_extTypes[3]
	// optional string path = 65001;
	E_Path = &file_api_annotations_annotations_proto_extTypes[4]
	// optional string query = 65002;
	E_Query = &file_api_annotations_annotations_proto_extTypes[5]
	// optional string form = 65003;
	E_Form = &file_api_annotations_annotations_proto_extTypes[6]
	// optional string json = 65004;
	E_Json = &file_api_annotations_annotations_proto_extTypes[7]
)

var File_api_annotations_annotations_proto protoreflect.FileDescriptor

var file_api_annotations_annotations_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x33, 0x0a,
	0x08, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0xd8, 0xad, 0x03, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x75, 0x6c,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x22, 0x48, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x34, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xc3, 0x02, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0xd0, 0x83, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74,
	0x18, 0xd1, 0x83, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x03, 0x70, 0x75, 0x74, 0x18, 0xd2, 0x83, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0xd3, 0x83, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0xd4, 0x83, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd5, 0x83, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x04, 0x68, 0x65,
	0x61, 0x64, 0x18, 0xd6, 0x83, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x65,
	0x61, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0xd7, 0x83,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0xd8, 0x83, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x13, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0xd9, 0x83, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x6f, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x12, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x22, 0xf6, 0x01, 0x0a, 0x08,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65,
	0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x2a,
	0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x4f, 0x0a, 0x07, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a, 0x31, 0x0a, 0x0c,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x67, 0x72, 0x70, 0x63, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x10, 0x02, 0x3a,
	0x45, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8, 0xfb, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x3a, 0x51, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xd0, 0x83, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6f, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x4d, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xb8, 0x8b, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x3a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xe8, 0xfb, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x3a, 0x36, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe9, 0xfb, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x3a, 0x38, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xea, 0xfb, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x3a, 0x36, 0x0a, 0x04, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xeb, 0xfb,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6f, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x3a, 0x36,
	0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xec, 0xfb, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a,
	0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x66, 0x6f, 0x78, 0x2f, 0x66, 0x6f, 0x78, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_api_annotations_annotations_proto_rawDescOnce sync.Once
	file_api_annotations_annotations_proto_rawDescData []byte
)

func file_api_annotations_annotations_proto_rawDescGZIP() []byte {
	file_api_annotations_annotations_proto_rawDescOnce.Do(func() {
		file_api_annotations_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_annotations_annotations_proto_rawDesc), len(file_api_annotations_annotations_proto_rawDesc)))
	})
	return file_api_annotations_annotations_proto_rawDescData
}

var file_api_annotations_annotations_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_annotations_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_annotations_annotations_proto_goTypes = []any{
	(GenerateType)(0),                   // 0: fox.api.GenerateType
	(*ServiceRule)(nil),                 // 1: fox.api.ServiceRule
	(*MethodRule)(nil),                  // 2: fox.api.MethodRule
	(*File)(nil),                        // 3: fox.api.File
	(*UploadRequest)(nil),               // 4: fox.api.UploadRequest
	(*HttpRule)(nil),                    // 5: fox.api.HttpRule
	(*InfoRule)(nil),                    // 6: fox.api.InfoRule
	(*Contact)(nil),                     // 7: fox.api.Contact
	(*License)(nil),                     // 8: fox.api.License
	(*descriptorpb.FileOptions)(nil),    // 9: google.protobuf.FileOptions
	(*descriptorpb.ServiceOptions)(nil), // 10: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),  // 11: google.protobuf.MethodOptions
	(*descriptorpb.FieldOptions)(nil),   // 12: google.protobuf.FieldOptions
}
var file_api_annotations_annotations_proto_depIdxs = []int32{
	0,  // 0: fox.api.ServiceRule.Generate:type_name -> fox.api.GenerateType
	0,  // 1: fox.api.MethodRule.Generate:type_name -> fox.api.GenerateType
	5,  // 2: fox.api.MethodRule.http:type_name -> fox.api.HttpRule
	3,  // 3: fox.api.UploadRequest.files:type_name -> fox.api.File
	5,  // 4: fox.api.HttpRule.additional_bindings:type_name -> fox.api.HttpRule
	7,  // 5: fox.api.InfoRule.contact:type_name -> fox.api.Contact
	8,  // 6: fox.api.InfoRule.license:type_name -> fox.api.License
	9,  // 7: fox.api.info:extendee -> google.protobuf.FileOptions
	10, // 8: fox.api.Service:extendee -> google.protobuf.ServiceOptions
	11, // 9: fox.api.method:extendee -> google.protobuf.MethodOptions
	12, // 10: fox.api.header:extendee -> google.protobuf.FieldOptions
	12, // 11: fox.api.path:extendee -> google.protobuf.FieldOptions
	12, // 12: fox.api.query:extendee -> google.protobuf.FieldOptions
	12, // 13: fox.api.form:extendee -> google.protobuf.FieldOptions
	12, // 14: fox.api.json:extendee -> google.protobuf.FieldOptions
	6,  // 15: fox.api.info:type_name -> fox.api.InfoRule
	1,  // 16: fox.api.Service:type_name -> fox.api.ServiceRule
	2,  // 17: fox.api.method:type_name -> fox.api.MethodRule
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	15, // [15:18] is the sub-list for extension type_name
	7,  // [7:15] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_annotations_annotations_proto_init() }
func file_api_annotations_annotations_proto_init() {
	if File_api_annotations_annotations_proto != nil {
		return
	}
	file_api_annotations_annotations_proto_msgTypes[1].OneofWrappers = []any{}
	file_api_annotations_annotations_proto_msgTypes[4].OneofWrappers = []any{
		(*HttpRule_Get)(nil),
		(*HttpRule_Post)(nil),
		(*HttpRule_Put)(nil),
		(*HttpRule_Delete)(nil),
		(*HttpRule_Patch)(nil),
		(*HttpRule_Options)(nil),
		(*HttpRule_Head)(nil),
		(*HttpRule_Connect)(nil),
		(*HttpRule_Trace)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_annotations_annotations_proto_rawDesc), len(file_api_annotations_annotations_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 8,
			NumServices:   0,
		},
		GoTypes:           file_api_annotations_annotations_proto_goTypes,
		DependencyIndexes: file_api_annotations_annotations_proto_depIdxs,
		EnumInfos:         file_api_annotations_annotations_proto_enumTypes,
		MessageInfos:      file_api_annotations_annotations_proto_msgTypes,
		ExtensionInfos:    file_api_annotations_annotations_proto_extTypes,
	}.Build()
	File_api_annotations_annotations_proto = out.File
	file_api_annotations_annotations_proto_goTypes = nil
	file_api_annotations_annotations_proto_depIdxs = nil
}
